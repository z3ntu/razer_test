/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp dbus/razerdevice.xml -a razerdeviceadaptor.h:razerdeviceadaptor.cpp -c RazerDeviceAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2019 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef RAZERDEVICEADAPTOR_H
#define RAZERDEVICEADAPTOR_H
#include "razer_test.h"
using namespace razer_test;

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T>
class QList;
template<class Key, class Value>
class QMap;
class QString;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface io.github.openrazer1.Device
 */
class RazerDeviceAdaptor : public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "io.github.openrazer1.Device")
    Q_CLASSINFO("D-Bus Introspection", ""
                                       "  <interface name=\"io.github.openrazer1.Device\">\n"
                                       "    <property access=\"read\" type=\"s\" name=\"Name\"/>\n"
                                       "    <property access=\"read\" type=\"s\" name=\"Type\"/>\n"
                                       "    <property access=\"read\" type=\"ao\" name=\"Leds\"/>\n"
                                       "    <property access=\"read\" type=\"as\" name=\"SupportedFx\"/>\n"
                                       "    <property access=\"read\" type=\"as\" name=\"SupportedFeatures\"/>\n"
                                       "    <property access=\"read\" type=\"(yy)\" name=\"MatrixDimensions\">\n"
                                       "      <annotation value=\"MatrixDimensions\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
                                       "    </property>\n"
                                       "    <method name=\"getSerial\">\n"
                                       "      <arg direction=\"out\" type=\"s\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"getFirmwareVersion\">\n"
                                       "      <arg direction=\"out\" type=\"s\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"getKeyboardLayout\">\n"
                                       "      <arg direction=\"out\" type=\"s\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"getDPI\">\n"
                                       "      <arg direction=\"out\" type=\"(qq)\"/>\n"
                                       "      <annotation value=\"RazerDPI\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"setDPI\">\n"
                                       "      <arg direction=\"out\" type=\"b\"/>\n"
                                       "      <arg direction=\"in\" type=\"(qq)\" name=\"dpi\"/>\n"
                                       "      <annotation value=\"razer_test::RazerDPI\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"getMaxDPI\">\n"
                                       "      <arg direction=\"out\" type=\"q\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"getPollRate\">\n"
                                       "      <arg direction=\"out\" type=\"q\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"setPollRate\">\n"
                                       "      <arg direction=\"out\" type=\"b\"/>\n"
                                       "      <arg direction=\"in\" type=\"q\" name=\"poll_rate\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"displayCustomFrame\">\n"
                                       "      <arg direction=\"out\" type=\"b\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"defineCustomFrame\">\n"
                                       "      <arg direction=\"out\" type=\"b\"/>\n"
                                       "      <arg direction=\"in\" type=\"y\" name=\"row\"/>\n"
                                       "      <arg direction=\"in\" type=\"y\" name=\"startColumn\"/>\n"
                                       "      <arg direction=\"in\" type=\"y\" name=\"endColumn\"/>\n"
                                       "      <arg direction=\"in\" type=\"a(yyy)\" name=\"rgbData\"/>\n"
                                       "      <annotation value=\"QVector&lt;razer_test::RGB&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.In3\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"startCustomEffectThread\">\n"
                                       "      <arg direction=\"out\" type=\"b\"/>\n"
                                       "      <arg direction=\"in\" type=\"s\" name=\"effectName\"/>\n"
                                       "    </method>\n"
                                       "    <method name=\"pauseCustomEffectThread\"/>\n"
                                       "  </interface>\n"
                                       "")
public:
    RazerDeviceAdaptor(QObject *parent);
    virtual ~RazerDeviceAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QList<QDBusObjectPath> Leds READ leds)
    QList<QDBusObjectPath> leds() const;

    Q_PROPERTY(MatrixDimensions MatrixDimensions READ matrixDimensions)
    MatrixDimensions matrixDimensions() const;

    Q_PROPERTY(QString Name READ name)
    QString name() const;

    Q_PROPERTY(QStringList SupportedFeatures READ supportedFeatures)
    QStringList supportedFeatures() const;

    Q_PROPERTY(QStringList SupportedFx READ supportedFx)
    QStringList supportedFx() const;

    Q_PROPERTY(QString Type READ type)
    QString type() const;

public Q_SLOTS: // METHODS
    bool defineCustomFrame(uchar row, uchar startColumn, uchar endColumn, const QVector<razer_test::RGB> &rgbData);
    bool displayCustomFrame();
    RazerDPI getDPI();
    QString getFirmwareVersion();
    QString getKeyboardLayout();
    ushort getMaxDPI();
    ushort getPollRate();
    QString getSerial();
    void pauseCustomEffectThread();
    bool setDPI(razer_test::RazerDPI dpi);
    bool setPollRate(ushort poll_rate);
    bool startCustomEffectThread(const QString &effectName);
Q_SIGNALS: // SIGNALS
};

#endif
